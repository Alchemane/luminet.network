name: Deploy (self-hosted)

on:
  push:
    branches: ["main"]

jobs:
  deploy:
    runs-on: self-hosted
    timeout-minutes: 30
    concurrency:
      group: deploy-${{ github.ref }}
      cancel-in-progress: true

    steps:
      - uses: actions/checkout@v4
        with: { fetch-depth: 0 }

      - name: Sync to live dir (keep prisma/.env and DB)
        run: |
          rsync -az --delete \
            --no-perms --no-owner --no-group --omit-dir-times \
            --exclude="node_modules" \
            --exclude=".next" \
            --exclude="data/" \
            --exclude="prisma/.env" \
            ./ /var/www/luminet/luminet-web/

      - name: Install deps (include dev)
        working-directory: /var/www/luminet/luminet-web
        run: |
          if [ -f package-lock.json ]; then
            npm ci --include=dev
          else
            NPM_CONFIG_PRODUCTION=false npm install
          fi

      - name: Prisma generate + self-heal DB
        working-directory: /var/www/luminet/luminet-web
        env:
          NODE_ENV: production
          # absolute path avoids CWD issues
          DATABASE_URL: "file:/var/www/luminet/luminet-web/data/luminet.db"
        run: |
          mkdir -p data
          npx prisma generate
          npx prisma db push

      - name: Build
        working-directory: /var/www/luminet/luminet-web
        run: npm run build

      - name: Verify build artifact
        working-directory: /var/www/luminet/luminet-web
        run: |
          test -d .next || (echo "No .next produced" && exit 1)
          test -f .next/BUILD_ID || (echo "Missing BUILD_ID" && exit 1)

      - name: Prune dev deps (optional)
        working-directory: /var/www/luminet/luminet-web
        run: npm prune --omit=dev

      - name: Start/Restart PM2 (self-heal ecosystem)
        working-directory: /var/www/luminet/luminet-web
        env:
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
        run: |
          # create ecosystem file if missing
          if [ ! -f ecosystem.config.js ]; then
            cat > ecosystem.config.js <<'JS'
            module.exports = {
              apps: [{
                name: "luminet-web",
                script: "node_modules/next/dist/bin/next",
                args: "start -p 3001 -H 0.0.0.0",
                cwd: "/var/www/luminet/luminet-web",
                env: {
                  NODE_ENV: "production",
                  DATABASE_URL: "file:/var/www/luminet/luminet-web/data/luminet.db",
                  JWT_SECRET: process.env.JWT_SECRET,
                  COOKIE_NAME: "luminet_session"
                },
                max_restarts: 5,
                min_uptime: "10s"
              }]
            }
            JS
          fi

          # start or restart the correct app name
          if pm2 describe luminet-web >/dev/null 2>&1; then
            pm2 restart luminet-web --update-env
          else
            pm2 start ecosystem.config.js --update-env
          fi
          pm2 save

      - name: Health check (retry)
        run: |
          for i in {1..20}; do
            curl -fsS http://127.0.0.1:3001/api/health/db && exit 0
            sleep 2
          done
          echo "Health check failed after retries"; pm2 logs --lines 200; exit 1
